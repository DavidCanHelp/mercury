// tls_extensions.hpp
//
// this file was autogenerated at 2024-11-19T22:08:46Z
// you should edit the source file(s) instead of this one
//
// source files:
//     /home/mcgrew/macos/mcgrew/Downloads/tls-extensiontype-values-1.csv
//

#ifndef TLS_EXTENSIONS_HPP
#define TLS_EXTENSIONS_HPP

#include "datum.h"

namespace tls {

template <typename T>
class extensions : public encoded<T> {
    static_assert(std::is_unsigned_v<T>, "T must be an unsigned integer");
public:
    void write_json(json_object &o) const {
        const char *name = get_name();
        if (name == nullptr) {
            o.print_key_unknown_code("extensions", encoded<T>::value());
        } else {
            o.print_key_string("extensions", name);
        }
    }
    enum code {
        server_name                            = 0,
        max_fragment_length                    = 1,
        client_certificate_url                 = 2,
        trusted_ca_keys                        = 3,
        truncated_hmac                         = 4,
        status_request                         = 5,
        user_mapping                           = 6,
        client_authz                           = 7,
        server_authz                           = 8,
        cert_type                              = 9,
        supported_groups                       = 10,
        ec_point_formats                       = 11,
        srp                                    = 12,
        signature_algorithms                   = 13,
        use_srtp                               = 14,
        heartbeat                              = 15,
        application_layer_protocol_negotiation = 16,
        status_request_v2                      = 17,
        signed_certificate_timestamp           = 18,
        client_certificate_type                = 19,
        server_certificate_type                = 20,
        padding                                = 21,
        encrypt_then_mac                       = 22,
        extended_master_secret                 = 23,
        token_binding                          = 24,
        cached_info                            = 25,
        tls_lts                                = 26,
        compress_certificate                   = 27,
        record_size_limit                      = 28,
        pwd_protect                            = 29,
        pwd_clear                              = 30,
        password_salt                          = 31,
        ticket_pinning                         = 32,
        tls_cert_with_extern_psk               = 33,
        delegated_credential                   = 34,
        session_ticket                         = 35,
        TLMSP                                  = 36,
        TLMSP_proxying                         = 37,
        TLMSP_delegate                         = 38,
        supported_ekt_ciphers                  = 39,
        pre_shared_key                         = 41,
        early_data                             = 42,
        supported_versions                     = 43,
        cookie                                 = 44,
        psk_key_exchange_modes                 = 45,
        certificate_authorities                = 47,
        oid_filters                            = 48,
        post_handshake_auth                    = 49,
        signature_algorithms_cert              = 50,
        key_share                              = 51,
        transparency_info                      = 52,
        connection_id_deprecated               = 53,
        connection_id                          = 54,
        external_id_hash                       = 55,
        external_session_id                    = 56,
        quic_transport_parameters              = 57,
        ticket_request                         = 58,
        dnssec_chain                           = 59,
        sequence_number_encryption_algorithms  = 60,
        rrc                                    = 61,
        ech_outer_extensions                   = 64768,
        encrypted_client_hello                 = 65037,
        renegotiation_info                     = 65281,
    };
    const char *get_name() const {
        switch(encoded<T>::value()) {
        case server_name:                            return "server_name";
        case max_fragment_length:                    return "max_fragment_length";
        case client_certificate_url:                 return "client_certificate_url";
        case trusted_ca_keys:                        return "trusted_ca_keys";
        case truncated_hmac:                         return "truncated_hmac";
        case status_request:                         return "status_request";
        case user_mapping:                           return "user_mapping";
        case client_authz:                           return "client_authz";
        case server_authz:                           return "server_authz";
        case cert_type:                              return "cert_type";
        case supported_groups:                       return "supported_groups";
        case ec_point_formats:                       return "ec_point_formats";
        case srp:                                    return "srp";
        case signature_algorithms:                   return "signature_algorithms";
        case use_srtp:                               return "use_srtp";
        case heartbeat:                              return "heartbeat";
        case application_layer_protocol_negotiation: return "application_layer_protocol_negotiation";
        case status_request_v2:                      return "status_request_v2";
        case signed_certificate_timestamp:           return "signed_certificate_timestamp";
        case client_certificate_type:                return "client_certificate_type";
        case server_certificate_type:                return "server_certificate_type";
        case padding:                                return "padding";
        case encrypt_then_mac:                       return "encrypt_then_mac";
        case extended_master_secret:                 return "extended_master_secret";
        case token_binding:                          return "token_binding";
        case cached_info:                            return "cached_info";
        case tls_lts:                                return "tls_lts";
        case compress_certificate:                   return "compress_certificate";
        case record_size_limit:                      return "record_size_limit";
        case pwd_protect:                            return "pwd_protect";
        case pwd_clear:                              return "pwd_clear";
        case password_salt:                          return "password_salt";
        case ticket_pinning:                         return "ticket_pinning";
        case tls_cert_with_extern_psk:               return "tls_cert_with_extern_psk";
        case delegated_credential:                   return "delegated_credential";
        case session_ticket:                         return "session_ticket";
        case TLMSP:                                  return "TLMSP";
        case TLMSP_proxying:                         return "TLMSP_proxying";
        case TLMSP_delegate:                         return "TLMSP_delegate";
        case supported_ekt_ciphers:                  return "supported_ekt_ciphers";
        case pre_shared_key:                         return "pre_shared_key";
        case early_data:                             return "early_data";
        case supported_versions:                     return "supported_versions";
        case cookie:                                 return "cookie";
        case psk_key_exchange_modes:                 return "psk_key_exchange_modes";
        case certificate_authorities:                return "certificate_authorities";
        case oid_filters:                            return "oid_filters";
        case post_handshake_auth:                    return "post_handshake_auth";
        case signature_algorithms_cert:              return "signature_algorithms_cert";
        case key_share:                              return "key_share";
        case transparency_info:                      return "transparency_info";
        case connection_id:                          return "connection_id";
        case connection_id:                          return "connection_id";
        case external_id_hash:                       return "external_id_hash";
        case external_session_id:                    return "external_session_id";
        case quic_transport_parameters:              return "quic_transport_parameters";
        case ticket_request:                         return "ticket_request";
        case dnssec_chain:                           return "dnssec_chain";
        case sequence_number_encryption_algorithms:  return "sequence_number_encryption_algorithms";
        case rrc:                                    return "rrc";
        case ech_outer_extensions:                   return "ech_outer_extensions";
        case encrypted_client_hello:                 return "encrypted_client_hello";
        case renegotiation_info:                     return "renegotiation_info";
        default:
            ;
        }
        return nullptr;
    }
};

}    // namespace tls

#endif // TLS_EXTENSIONS_HPP

