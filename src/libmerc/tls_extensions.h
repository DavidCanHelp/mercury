// tls_extensions.h
//
// this file was autogenerated at 2024-04-01T05:05:59Z
// you should edit the source file(s) instead of this one
//
// source files:
//     tls-extensiontype-values-1.csv
//

#ifndef TLS_EXTENSIONS_H
#define TLS_EXTENSIONS_H

#include <unordered_map>

class tls_extensions_assign{
    static std::unordered_map<int32_t, int32_t>& get_mapping_index() {
        static std::unordered_map<int32_t, int32_t> mapping_index = {
        { 0, 0},
        { 1, 1},
        { 2, 2},
        { 3, 3},
        { 4, 4},
        { 5, 5},
        { 6, 6},
        { 7, 7},
        { 8, 8},
        { 9, 9},
        { 10, 10},
        { 11, 11},
        { 12, 12},
        { 13, 13},
        { 14, 14},
        { 15, 15},
        { 16, 16},
        { 17, 17},
        { 18, 18},
        { 19, 19},
        { 20, 20},
        { 22, 21},
        { 23, 22},
        { 24, 23},
        { 25, 24},
        { 26, 25},
        { 27, 26},
        { 28, 27},
        { 29, 28},
        { 30, 29},
        { 31, 30},
        { 32, 31},
        { 33, 32},
        { 34, 33},
        { 36, 34},
        { 37, 35},
        { 38, 36},
        { 39, 37},
        { 40, 38},
        { 43, 39},
        { 44, 40},
        { 45, 41},
        { 46, 42},
        { 47, 43},
        { 48, 44},
        { 49, 45},
        { 50, 46},
        { 51, 47},
        { 52, 48},
        { 53, 49},
        { 54, 50},
        { 55, 51},
        { 56, 52},
        { 57, 53},
        { 58, 54},
        { 59, 55},
        { 60, 56},
        { 61, 57},
        { 62, 58},
        { 2570, 59},
        { 13172, 60},
        { 21760, 61},
        { 30031, 62},
        { 30032, 63},
        { 64768, 64},
        { 65037, 65},
        { 65280, 66},
        { 65281, 67},
        { 65283, 68},
        { 65445, 69},
        { 65486, 70},
        };
        return mapping_index;
    }

public:
    static constexpr uint16_t include_list_len = 71;

    tls_extensions_assign() {}

    static int32_t get_index(uint16_t type) {
        static const std::unordered_map<int32_t, int32_t> &mapping_index = get_mapping_index();
        auto it = mapping_index.find(type);
        if (it != mapping_index.end()) {
            return(it->second);
        }
        return -1;
    }

    static constexpr uint16_t smallest_private_extn = 65280;

    static constexpr uint16_t smallest_unassigned_extn = 62;

};


#endif // TLS_EXTENSIONS_H

